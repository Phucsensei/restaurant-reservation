{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/app/components/Admin/Title.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ninterface TitleProps {\r\n    title: string\r\n    subTitle: string\r\n}\r\n\r\nconst Title = ({ title, subTitle }: TitleProps) => {\r\n    return (\r\n        <>\r\n            <h1 className='font-medium text-3xl'>{title}</h1>\r\n            <p className='text-sm md:text-base text-gray-500/90 mt-2 max-w-156'>{subTitle}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Title\r\n"],"names":[],"mappings":";;;;;;AAOA,MAAM,QAAQ;QAAC,EAAE,KAAK,EAAE,QAAQ,EAAc;IAC1C,qBACI;;0BACI,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;0BAAwD;;;;;;;;AAGjF;KAPM;uCASS","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs))\r\n}\r\n\r\nexport const convertToTiming = (\r\n    intervalType: string,\r\n    value?: number,\r\n): string => {\r\n    switch (intervalType) {\r\n        case 'minutes':\r\n            if (!value) return '0 * * * *' // Every hour as fallback\r\n            return `*/${value} * * * *`\r\n        case 'hours':\r\n            if (!value) return '0 * * * *' // Every hour as fallback\r\n            return `0 */${value} * * *`\r\n        case 'days':\r\n            if (!value) return '0 0 * * *' // Daily as fallback\r\n            return `0 0 */${value} * *`\r\n        case 'months':\r\n            if (!value) return '0 0 1 * *' // Monthly as fallback\r\n            return `0 0 1 */${value} *`\r\n        case 'one_time':\r\n            return '' // One-time jobs don't need cron expressions\r\n        default:\r\n            return '0 * * * *' // Default to hourly\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACtC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACxB;AAEO,MAAM,kBAAkB,CAC3B,cACA;IAEA,OAAQ;QACJ,KAAK;YACD,IAAI,CAAC,OAAO,OAAO,YAAY,yBAAyB;;YACxD,OAAO,AAAC,KAAU,OAAN,OAAM;QACtB,KAAK;YACD,IAAI,CAAC,OAAO,OAAO,YAAY,yBAAyB;;YACxD,OAAO,AAAC,OAAY,OAAN,OAAM;QACxB,KAAK;YACD,IAAI,CAAC,OAAO,OAAO,YAAY,oBAAoB;;YACnD,OAAO,AAAC,SAAc,OAAN,OAAM;QAC1B,KAAK;YACD,IAAI,CAAC,OAAO,OAAO,YAAY,sBAAsB;;YACrD,OAAO,AAAC,WAAgB,OAAN,OAAM;QAC5B,KAAK;YACD,OAAO,GAAG,4CAA4C;;QAC1D;YACI,OAAO,YAAY,oBAAoB;;IAC/C;AACJ","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/app/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport { cn } from '@/lib/utils'\r\n\r\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n    label?: string\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n    ({ className, label, type, ...props }, ref) => {\r\n        return (\r\n            <div className=\"w-full\">\r\n                {label && (\r\n                    <label className=\"block font-medium text-gray-800 mb-1 text-sm\">\r\n                        {label}\r\n                    </label>\r\n                )}\r\n                <input\r\n                    type={type}\r\n                    className={cn(\r\n                        'w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-sm',\r\n                        'focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary',\r\n                        'placeholder:text-gray-400',\r\n                        'disabled:opacity-50 disabled:cursor-not-allowed',\r\n                        className\r\n                    )}\r\n                    ref={ref}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n)\r\nInput.displayName = 'Input'\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,sBAAQ,2KAAgB,MAC1B,QAAuC;QAAtC,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,OAAO;IACjC,qBACI,6LAAC;QAAI,WAAU;;YACV,uBACG,6LAAC;gBAAM,WAAU;0BACZ;;;;;;0BAGT,6LAAC;gBACG,MAAM;gBACN,WAAW,IAAA,4HAAE,EACT,uEACA,2EACA,6BACA,mDACA;gBAEJ,KAAK;gBACJ,GAAG,KAAK;;;;;;;;;;;;AAIzB;;AAEJ,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/app/components/ui/select.tsx"],"sourcesContent":["'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as SelectPrimitive from '@radix-ui/react-select'\r\nimport { Check, ChevronDown } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n    React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n    <SelectPrimitive.Trigger\r\n        ref={ref}\r\n        className={cn(\r\n            'flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 min-w-0 [&>*:first-child]:flex-1 [&>*:first-child]:truncate [&>*:first-child]:text-left',\r\n            className\r\n        )}\r\n        {...props}\r\n    >\r\n        {children}\r\n        <SelectPrimitive.Icon asChild>\r\n            <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n        </SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n    React.ElementRef<typeof SelectPrimitive.Content>,\r\n    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = 'popper', ...props }, ref) => (\r\n    <SelectPrimitive.Portal>\r\n        <SelectPrimitive.Content\r\n            ref={ref}\r\n            className={cn(\r\n                'relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n                position === 'popper' &&\r\n                'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n                className\r\n            )}\r\n            position={position}\r\n            {...props}\r\n        >\r\n            <SelectPrimitive.Viewport\r\n                className={cn(\r\n                    'p-1',\r\n                    position === 'popper' &&\r\n                    'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\r\n                )}\r\n            >\r\n                {children}\r\n            </SelectPrimitive.Viewport>\r\n        </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n    React.ElementRef<typeof SelectPrimitive.Label>,\r\n    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n    <SelectPrimitive.Label\r\n        ref={ref}\r\n        className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\r\n        {...props}\r\n    />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n    React.ElementRef<typeof SelectPrimitive.Item>,\r\n    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n    <SelectPrimitive.Item\r\n        ref={ref}\r\n        className={cn(\r\n            'relative flex w-full cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n            className\r\n        )}\r\n        {...props}\r\n    >\r\n        <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n            <SelectPrimitive.ItemIndicator>\r\n                <Check className=\"h-4 w-4\" />\r\n            </SelectPrimitive.ItemIndicator>\r\n        </span>\r\n\r\n        <SelectPrimitive.ItemText className=\"truncate w-full\">{children}</SelectPrimitive.ItemText>\r\n    </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n    React.ElementRef<typeof SelectPrimitive.Separator>,\r\n    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n    <SelectPrimitive.Separator\r\n        ref={ref}\r\n        className={cn('-mx-1 my-1 h-px bg-muted', className)}\r\n        {...props}\r\n    />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n    Select,\r\n    SelectGroup,\r\n    SelectValue,\r\n    SelectTrigger,\r\n    SelectContent,\r\n    SelectLabel,\r\n    SelectItem,\r\n    SelectSeparator,\r\n} \r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,MAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAChC,6LAAC,gLAAuB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACT,oXACA;QAEH,GAAG,KAAK;;YAER;0BACD,6LAAC,6KAAoB;gBAAC,OAAO;0BACzB,cAAA,6LAAC,sOAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;;AAInC,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAyD;QAAxD,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO;yBACrD,6LAAC,+KAAsB;kBACnB,cAAA,6LAAC,gLAAuB;YACpB,KAAK;YACL,WAAW,IAAA,4HAAE,EACT,8bACA,aAAa,YACb,mIACA;YAEJ,UAAU;YACT,GAAG,KAAK;sBAET,cAAA,6LAAC,iLAAwB;gBACrB,WAAW,IAAA,4HAAE,EACT,OACA,aAAa,YACb;0BAGH;;;;;;;;;;;;;;;;;;AAKjB,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC,8KAAqB;QAClB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGjB,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,2KAAgB,OAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAChC,6LAAC,6KAAoB;QACjB,KAAK;QACL,WAAW,IAAA,4HAAE,EACT,6NACA;QAEH,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACZ,cAAA,6LAAC,sLAA6B;8BAC1B,cAAA,6LAAC,gNAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIzB,6LAAC,iLAAwB;gBAAC,WAAU;0BAAmB;;;;;;;;;;;;;;AAG/D,WAAW,WAAW,GAAG,6KAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACtB,6LAAC,kLAAyB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;;;;;;;AAGjB,gBAAgB,WAAW,GAAG,kLAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/app/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport { cn } from '@/lib/utils'\r\n\r\ninterface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n    label?: string\r\n}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n    ({ className, label, ...props }, ref) => {\r\n        return (\r\n            <div className=\"w-full\">\r\n                {label && (\r\n                    <label className=\"block font-medium text-gray-800 mb-1 text-sm\">\r\n                        {label}\r\n                    </label>\r\n                )}\r\n                <textarea\r\n                    className={cn(\r\n                        'w-full px-3 py-2 bg-white border border-gray-300 rounded-md text-sm',\r\n                        'focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary',\r\n                        'placeholder:text-gray-400',\r\n                        'disabled:opacity-50 disabled:cursor-not-allowed',\r\n                        className\r\n                    )}\r\n                    ref={ref}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n)\r\nTextarea.displayName = 'Textarea'\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,yBAAW,2KAAgB,MAC7B,QAAiC;QAAhC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO;IAC3B,qBACI,6LAAC;QAAI,WAAU;;YACV,uBACG,6LAAC;gBAAM,WAAU;0BACZ;;;;;;0BAGT,6LAAC;gBACG,WAAW,IAAA,4HAAE,EACT,uEACA,2EACA,6BACA,mDACA;gBAEJ,KAAK;gBACJ,GAAG,KAAK;;;;;;;;;;;;AAIzB;;AAEJ,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/app/components/ui/checkbox.tsx"],"sourcesContent":["'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox'\r\nimport { CheckIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Checkbox({\r\n    className,\r\n    ...props\r\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\r\n    return (\r\n        <CheckboxPrimitive.Root\r\n            data-slot=\"checkbox\"\r\n            className={cn(\r\n                'peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50',\r\n                className\r\n            )}\r\n            {...props}\r\n        >\r\n            <CheckboxPrimitive.Indicator\r\n                data-slot=\"checkbox-indicator\"\r\n                className=\"flex items-center justify-center text-current transition-none\"\r\n            >\r\n                <CheckIcon className=\"size-3.5\" />\r\n            </CheckboxPrimitive.Indicator>\r\n        </CheckboxPrimitive.Root>\r\n    )\r\n}\r\n\r\nexport { Checkbox }\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,KAGoC;QAHpC,EACd,SAAS,EACT,GAAG,OAC+C,GAHpC;IAId,qBACI,6LAAC,+KAAsB;QACnB,aAAU;QACV,WAAW,IAAA,4HAAE,EACT,+eACA;QAEH,GAAG,KAAK;kBAET,cAAA,6LAAC,oLAA2B;YACxB,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,wNAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIrC;KArBS","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///E:/Reversation/reservation/client/src/app/admin/add-table/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useState } from 'react'\r\nimport Image from 'next/image'\r\nimport { assets } from '@/app/assets/assets'\r\nimport Title from '@/app/components/Admin/Title'\r\nimport { Input } from '@/app/components/ui/input'\r\nimport { Select } from '@/app/components/ui/select'\r\nimport { Textarea } from '@/app/components/ui/textarea'\r\nimport { Checkbox } from '@/app/components/ui/checkbox'\r\n\r\nconst AddTablePage = () => {\r\n    const [image, setImage] = useState<string | File>('')\r\n    const [table, setTable] = useState({\r\n        number: '',\r\n        capacity: 0,\r\n        section: '',\r\n        image: '',\r\n        type: '',\r\n        isWindow: false,\r\n        pricePerSlot: 0,\r\n        location: '',\r\n        description: '',\r\n        isAvailable: true,\r\n        createdAt: new Date().toISOString(),\r\n    })\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        console.log(table)\r\n    }\r\n\r\n    return (\r\n        <div className='px-6 py-8 flex-1 bg-gray-50'>\r\n            <Title title='Add Table' subTitle='Add a new table to the system' />\r\n\r\n            <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg border border-gray-200 mt-6 max-w-xl\">\r\n                {/* Image Upload */}\r\n                <div className='flex items-center gap-4 pb-4 border-b border-gray-100 mb-6'>\r\n                    <label htmlFor=\"table-image\" className=\"cursor-pointer\">\r\n                        <div className=\"relative w-20 h-20 rounded-lg bg-gray-50 border-2 border-dashed border-gray-200 flex items-center justify-center hover:bg-gray-100/50 transition-colors\">\r\n                            {image instanceof File ? (\r\n                                <Image src={URL.createObjectURL(image)} alt=\"preview\" fill className='object-cover rounded-lg' />\r\n                            ) : (\r\n                                <Image src={assets.upload_icon} alt=\"upload\" width={20} height={20} className='opacity-40' />\r\n                            )}\r\n                        </div>\r\n                        <input type='file' id='table-image' accept='image/*' hidden onChange={e => e.target.files?.[0] && setImage(e.target.files[0])} />\r\n                    </label>\r\n                    <div>\r\n                        <p className='font-medium text-gray-800'>Table Image</p>\r\n                        <p className='text-sm text-gray-500'>Upload a picture of the table</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='space-y-4'>\r\n                    {/* Basic Info */}\r\n                    <div className='grid md:grid-cols-2 gap-4'>\r\n                        <Input\r\n                            label=\"Table Number\"\r\n                            placeholder=\"e.g. T01\"\r\n                            value={table.number}\r\n                            onChange={(e) => setTable({ ...table, number: e.target.value })}\r\n                        />\r\n                        <Input\r\n                            type=\"number\"\r\n                            label=\"Capacity\"\r\n                            placeholder=\"Number of guests\"\r\n                            value={table.capacity || ''}\r\n                            onChange={(e) => setTable({ ...table, capacity: parseInt(e.target.value) })}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Section & Type */}\r\n                    <div className='grid md:grid-cols-2 gap-4'>\r\n                        <Select\r\n                            label=\"Section\"\r\n                            placeholder=\"Select section\"\r\n                            value={table.section}\r\n                            onChange={(e) => setTable({ ...table, section: e.target.value })}\r\n                            options={[\r\n                                { value: 'Main Hall', label: 'Main Hall' },\r\n                                { value: 'Terrace', label: 'Terrace' },\r\n                                { value: 'Private Room', label: 'Private Room' }\r\n                            ]}\r\n                        />\r\n                        <Select\r\n                            label=\"Type\"\r\n                            placeholder=\"Select type\"\r\n                            value={table.type}\r\n                            onChange={(e) => setTable({ ...table, type: e.target.value })}\r\n                            options={[\r\n                                { value: 'Standard', label: 'Standard' },\r\n                                { value: 'Family', label: 'Family' },\r\n                                { value: 'Premium', label: 'Premium' },\r\n                                { value: 'VIP', label: 'VIP' }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Price & Location */}\r\n                    <div className='grid md:grid-cols-2 gap-4'>\r\n                        <Input\r\n                            type=\"number\"\r\n                            label=\"Price per Slot\"\r\n                            placeholder=\"Price in USD\"\r\n                            value={table.pricePerSlot || ''}\r\n                            onChange={(e) => setTable({ ...table, pricePerSlot: parseInt(e.target.value) })}\r\n                        />\r\n                        <Select\r\n                            label=\"Location\"\r\n                            placeholder=\"Select location\"\r\n                            value={table.location}\r\n                            onChange={(e) => setTable({ ...table, location: e.target.value })}\r\n                            options={[\r\n                                { value: 'Ground Floor', label: 'Ground Floor' },\r\n                                { value: 'First Floor', label: 'First Floor' },\r\n                                { value: 'Rooftop', label: 'Rooftop' }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Checkboxes */}\r\n                    <div className='flex gap-6'>\r\n                        <Checkbox\r\n                            label=\"Window View\"\r\n                            checked={table.isWindow}\r\n                            onChange={(e) => setTable({ ...table, isWindow: e.target.checked })}\r\n                        />\r\n                        <Checkbox\r\n                            label=\"Available for Booking\"\r\n                            checked={table.isAvailable}\r\n                            onChange={(e) => setTable({ ...table, isAvailable: e.target.checked })}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    <Textarea\r\n                        label=\"Description\"\r\n                        placeholder=\"Describe the table and its features...\"\r\n                        value={table.description}\r\n                        onChange={(e) => setTable({ ...table, description: e.target.value })}\r\n                        rows={3}\r\n                    />\r\n\r\n                    {/* Submit Button */}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className='w-full bg-primary text-white font-medium py-2.5 rounded-lg hover:bg-primary/90 transition-colors'\r\n                    >\r\n                        Add Table\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTablePage"],"names":[],"mappings":"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","debugId":null}}]
}